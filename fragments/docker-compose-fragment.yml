version: '2'
services:
  # Notice how the service name, container name and repo directory (where the Dockerfile lives) all match.
  search-api:
    container_name: search-api
    build: /vagrant/apps/search-api
    restart: on-failure
    ports:
      # The base Flask Dockerfile tells gunicorn to use 8080 by default, we expose it here and map it to a unique
      # port for the app (which is subsequently used by the dev-env to forward it outside of vagrant too).
      - "9898:8080"
    volumes:
      # Our convention is (for python) to always map the app files to /src within the container
      - /vagrant/apps/search-api:/src
    # Redirect all the logs to a logstash server. Logstash is set up to parse RFC5424 format messages.
    logging:
      driver: syslog
      options:
        syslog-format: rfc5424
        syslog-address: tcp://localhost:25826
        tag: "{{.Name}}"
    # Docker-compose will ensure logstash is started before the application starts.
    depends_on:
      - logstash
      - postgres
  dev-search-service-search-api:
    container_name: dev-search-service-search-api
    build: /vagrant/apps/search-api
    restart: on-failure
    ports:
      # The base Flask Dockerfile tells gunicorn to use 8080 by default, we expose it here and map it to a unique
      # port for the app (which is subsequently used by the dev-env to forward it outside of vagrant too).
      - "9899:8080"
    volumes:
      # Our convention is (for python) to always map the app files to /src within the container
      - /vagrant/apps/search-api:/src
    # Redirect all the logs to a logstash server. Logstash is set up to parse RFC5424 format messages.
    logging:
      driver: syslog
      options:
        syslog-format: rfc5424
        syslog-address: tcp://localhost:25826
        tag: "{{.Name}}"
    # Docker-compose will ensure logstash is started before the application starts.
    depends_on:
      - logstash
      - postgres
    environment:
      - APP_NAME=search-api
      - SQL_HOST=postgres
      - LOG_LEVEL=DEBUG
      - COMMIT=LOCAL
      - SQL_DATABASE=llc_register
      - SQL_PASSWORD=llc_register_password
      - APP_SQL_USERNAME=llc_register_user
      - ALEMBIC_SQL_USERNAME=root
      - SQL_USE_ALEMBIC_USER=false
      - ADDRESS_API_URL=http://address-api:8080
      - MAX_HEALTH_CASCADE=
      - FEEDER_SQL_USERNAME=llc_register_feeder
      - FEEDER_SQL_PASSWORD=llc_register_feeder_password
      - AUTHENTICATION_API_URL=http://dev-search-authentication-api:8080/v2.0
      - AUTHENTICATION_API_ROOT=http://dev-search-authentication-api:8080
      - ACCTEST_SQL_USERNAME=llc_register_acceptance_test_user
      - ACCTEST_SQL_PASSWORD=ragdVXG3epx9bEScOAhrrmKh2chG0jFIxt0i
